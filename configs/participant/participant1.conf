canton {
  participants {
    participant1 {
      storage = ${_shared.storage}
      storage.config.properties.databaseName = "participant1"
      parameters.unique-contract-keys = ${?_.shared.unique-contract-keys}
      replication.enabled = true
      admin-api {
        port = 10012
        port = ${?CANTON_PARTICIPANT_1_ADMIN_PORT}
        // if defined, this include will override the address we bind to. default is 127.0.0.1
        address = ${?_shared.admin-api.address}
        tls {
          cert-chain-file = "./certs/participant1/participant1/certs/participant1-chain.customer1.com.cert.pem"
          private-key-file = "certs/participant1/participant1/private/participant1.customer1.com.key.pem"
          trust-collection-file = "./certs/participant1/intermediate/certs/ca-chain.cert.pem"
          client-auth = {
            type = require
            admin-client {
              cert-chain-file = "./certs/participant1/client/admin-api.customer1.com.cert.pem"
              private-key-file = "./certs/participant1/client/admin-api.customer1.com.key.pem"
            }
          }
          minimum-server-protocol-version = TLSv1.3
          ciphers = null
        }
      }
      ledger-api {
        port = 10011
        port = ${?CANTON_PARTICIPANT_1_LEDGER_PORT}
        address = ${?_shared.ledger-api.address}
        auth-services = ${?_shared.ledger-api.auth-services}
        tls {
          cert-chain-file = "./certs/participant1/participant1/certs/participant1-chain.customer1.com.cert.pem"
          private-key-file = "certs/participant1/participant1/private/participant1.customer1.com.key.pem"
          trust-collection-file = "./certs/participant1/intermediate/certs/ca-chain.cert.pem"
          client-auth = {
            type = require
            admin-client {
              cert-chain-file = "./certs/participant1/client/admin-api.customer1.com.cert.pem"
              private-key-file = "./certs/participant1/client/admin-api.customer1.com.key.pem"
            }
          }
          minimum-server-protocol-version = TLSv1.3
          ciphers = null
        }
      }
    }
  }
  features.enable-testing-commands = yes
  features.enable-preview-commands = yes
  monitoring {
    logging {
      event-details = true
      api.message-payloads = true
    }
    health {
      server {
        address = 0.0.0.0
        port = 8001
        port = ${?CANTON_PARTICIPANT_1_HEALTH_PORT}
      }
      check.type = is-active
    }
  }
}
